name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [main]

permissions:
  contents: read
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-branch-protection:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check if commit is directly to main
        run: |
          echo "‚ùå ERROR: Direct pushes to main are forbidden!"
          echo "This push was made by: ${{ github.actor }}"
          echo "Please use Pull Requests for all changes to main."
          exit 1

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Bandit Security Scan and convert to SARIF
        uses: advanced-security/bandit-sarif-formatter-action@v2
        with:
          output: bandit-report.sarif
          target: app/

      - name: Upload Bandit SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-report.sarif

      - name: Safety check
        uses: py-actions/pip-audit@v1
        with:
          requirement-files: "requirements.txt,requirements-dev.txt"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Lint & Format
        run: |
          ruff check --output-format=github .
          black --check .
          isort --check-only .

      - name: Type checking
        run: mypy app/

      - name: Tests with coverage
        run: |
          pytest --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=80

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Pre-commit (all files)
        run: pre-commit run --all-files
